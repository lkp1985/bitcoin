server.port=8081
spring.data.neo4j.username=neo4j
spring.data.neo4j.password=111111
spring.data.neo4j.uri=http://192.168.1.9:7474
spring.data.neo4j.url=bolt://192.168.1.9:7687


#============== kafka ===================
#kafka.consumer.zookeeper.connect=192.168.1.9:2181
#kafka.consumer.servers=192.168.1.9:9092
#kafka.consumer.enable.auto.commit=true
#kafka.consumer.session.timeout=6000
#kafka.consumer.auto.commit.interval=100
#kafka.consumer.auto.offset.reset=latest
#kafka.consumer.topic=block
#kafka.consumer.group.id=test
#kafka.consumer.concurrency=10
#
#kafka.producer.servers=192.168.1.9:9092
#kafka.producer.retries=0
#kafka.producer.batch.size=4096
#kafka.producer.linger=1
#kafka.producer.buffer.memory=40960



#kafka
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=192.168.1.9:9092
# 指定默认消费者group id
spring.kafka.consumer.group-id=bitcoin
spring.kafka.consumer.auto-offset-reset=latest
#spring.kafka.consumer.auto-offset-reset=earliest
# 指定默认topic id
spring.kafka.template.default-topic= block
# 指定listener 容器中的线程数，用于提高并发量
spring.kafka.listener.concurrency= 1
# 每次批量发送消息的数量
spring.kafka.producer.batch-size= 1000
#db.path=D:\\workspace_lkp\\neo4j-community-3.3.1\\data\\databases\\graph.db
db.path=D:\\workspace_lkp\\neo4j-community-3.3.1\\data\\databases\\graph.db

#启用shutdown
endpoints.shutdown.enabled=true
#禁用密码验证
endpoints.shutdown.sensitive=false
#lastblock=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f
lastblock=00000000000004ff83b6c10460b239ef4a6aa320e5fffd6c7bcedefa8c78593c

timeBlockNum=1

produce_on=1
#mongodb 
spring.data.mongodb.uri: mongodb://192.168.1.9:27017/bitcoin


#redis

# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0  
# Redis服务器地址
spring.redis.host=192.168.1.9
# Redis服务器连接端口
spring.redis.port=6379  
# Redis服务器连接密码（默认为空）
spring.redis.password=  
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8  
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1  
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8  
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0  
# 连接超时时间（毫秒）
spring.redis.timeout=0  

topic=block3

downtopic=block3


#用于解析MyBlock的主题
parsetopic=parsetopic
height=0
maxThread=1